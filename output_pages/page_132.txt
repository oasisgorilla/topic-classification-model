Section 2.3
Integer Arithmetic
131
return tadd_ok(x, -y);
}
For what values of x and y will this function give incorrect results? Writing a
correct version of this function is left as an exercise (Problem 2.74).
2.3.3
Two’s-Complement Negation
We can see that every number x in the range TMinw ≤x ≤TMaxw has an additive
inverse under +t
w, which we denote -t
w x as follows:
principle: Two’s-complement negation
For x in the range TMinw ≤x ≤TMaxw, its two’s-complement negation -t
w x is
given by the formula
-t
w x =
 TMinw,
x = TMinw
−x,
x > TMinw
(2.15)
That is, for w-bit two’s-complement addition, TMinw is its own additive in-
verse, while any other value x has −x as its additive inverse.
derivation: Two’s-complement negation
Observe that TMinw + TMinw = −2w−1 + −2w−1 = −2w. This would cause nega-
tive overﬂow, and hence TMinw +t
w TMinw = −2w + 2w = 0. For values of x such
that x > TMinw, the value −x can also be represented as a w-bit two’s-complement
number, and their sum will be −x + x = 0.
Practice Problem 2.33 (solution page 189)
We can represent a bit pattern of length w = 4 with a single hex digit. For a two’s-
complement interpretation of these digits, ﬁll in the following table to determine
the additive inverses of the digits shown:
x
-t
4 x
Hex
Decimal
Decimal
Hex
2
3
9
B
C
What do you observe about the bit patterns generated by two’s-complement
and unsigned (Problem 2.28) negation?
