342
Chapter 3
Machine-Level Representation of Programs
C.
1
vmovsd
.LC2(%rip), %xmm1
2
vxorpd
%xmm1, %xmm0, %xmm0
3
.LC2:
4
.long
0
5
.long
-2147483648
6
.long
0
7
.long
0
3.11.6
Floating-Point Comparison Operations
AVX2 provides two instructions for comparing ﬂoating-point values:
Instruction
Based on
Description
ucomiss
S1, S2
S2−S1
Compare single precision
ucomisd
S1, S2
S2−S1
Compare double precision
These instructions are similar to the cmp instructions (see Section 3.6), in that
they compare operands S1 and S2 (but in the opposite order one might expect) and
set the condition codes to indicate their relative values. As with cmpq, they follow
the ATT-format convention of listing the operands in reverse order. Argument
S2 must be in an XMM register, while S1 can be either in an XMM register or in
memory.
The ﬂoating-point comparison instructions set three condition codes: the zero
ﬂag ZF, the carry ﬂag CF, and the parity ﬂag PF. We did not document the parity
ﬂag in Section 3.6.1, because it is not commonly found in gcc-generated x86 code.
For integer operations, this ﬂag is set when the most recent arithmetic or logical
operation yielded a value where the least signiﬁcant byte has even parity (i.e.,
an even number of ones in the byte). For ﬂoating-point comparisons, however,
the ﬂag is set when either operand is NaN. By convention, any comparison in C
is considered to fail when one of the arguments is NaN, and this ﬂag is used to
detect such a condition. For example, even the comparison x == x yields 0 when x
is NaN.
The condition codes are set as follows:
Ordering S2:S1
CF
ZF
PF
Unordered
1
1
1
S2 < S1
1
0
0
S2 = S1
0
1
0
S2 > S1
0
0
0
The unordered case occurs when either operand is NaN. This can be detected
with the parity ﬂag. Commonly, the jp (for “jump on parity”) instruction is used to
conditionally jump when a ﬂoating-point comparison yields an unordered result.
Except for this case, the values of the carry and zero ﬂags are the same as those
for an unsigned comparison: ZF is set when the two operands are equal, and CF is
