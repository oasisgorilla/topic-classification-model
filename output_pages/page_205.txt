204
Chapter 3
Machine-Level Representation of Programs
went up to 24 M transistors, due to the incorporation of the level-2 cache
on chip.
Pentium 4 (2000, 42 M transistors). Extended SSE to SSE2, adding new data
types (including double-precision ﬂoating point), along with 144 new in-
structions for these formats. With these extensions, compilers can use SSE
instructions, rather than x87 instructions, to compile ﬂoating-point code.
Pentium 4E (2004, 125 M transistors). Added hyperthreading, a method to run
two programs simultaneously on a single processor, as well as EM64T,
Intel’s implementation of a 64-bit extension to IA32 developed by Ad-
vanced Micro Devices (AMD), which we refer to as x86-64.
Core 2 (2006, 291 M transistors). Returned to a microarchitecture similar to
P6. First multi-core Intel microprocessor, where multiple processors are
implemented on a single chip. Did not support hyperthreading.
Core i7, Nehalem (2008, 781 M transistors). Incorporated both hyperthreading
and multi-core, with the initial version supporting two executing pro-
grams on each core and up to four cores on each chip.
Core i7, Sandy Bridge (2011, 1.17 G transistors). Introduced AVX, an exten-
sion of the SSE to support data packed into 256-bit vectors.
Core i7, Haswell (2013, 1.4 G transistors). Extended AVX to AVX2, adding
more instructions and instruction formats.
Each successive processor has been designed to be backward compatible—
able to run code compiled for any earlier version. As we will see, there are many
strange artifacts in the instruction set due to this evolutionary heritage. Intel has
had several names for their processor line, including IA32, for “Intel Architecture
32-bit” and most recently Intel64, the 64-bit extension to IA32, which we will refer
to as x86-64. We will refer to the overall line by the commonly used colloquial
name “x86,” reﬂecting the processor naming conventions up through the i486.
Over the years, several companies have produced processors that are com-
patible with Intel processors, capable of running the exact same machine-level
programs. Chief among these is Advanced Micro Devices (AMD). For years,
AMD lagged just behind Intel in technology, forcing a marketing strategy where
they produced processors that were less expensive although somewhat lower in
performance. They became more competitive around 2002, being the ﬁrst to break
the 1-gigahertz clock-speed barrier for a commercially available microprocessor,
and introducing x86-64, the widely adopted 64-bit extension to Intel’s IA32. Al-
though we will talk about Intel processors, our presentation holds just as well for
the compatible processors produced by Intel’s rivals.
Muchofthecomplexityofx86isnotofconcerntothoseinterestedinprograms
for the Linux operating system as generated by the gcc compiler. The memory
model provided in the original 8086 and its extensions in the 80286 became ob-
solete with the i386. The original x87 ﬂoating-point instructions became obsolete
