Solutions to Practice Problems
195
Solution to Problem 2.48 (page 155)
Hexadecimal 0x359141 is equivalent to binary [1101011001000101000001]. Shift-
ing this right 21 places gives 1.1010110010001010000012 × 221. We form the frac-
tion ﬁeld by dropping the leading 1 and adding two zeros, giving
[10101100100010100000100]
The exponent is formed by adding bias 127 to 21, giving 148 (binary [10010100]).
We combine this with a sign ﬁeld of 0 to give a binary representation
[01001010010101100100010100000100]
We see that the matching bits in the two representations correspond to the low-
order bits of the integer, up to the most signiﬁcant bit equal to 1 matching the
high-order 21 bits of the fraction:
0
0
3
5
9
1
4
1
00000000001101011001000101000001
*********************
4
A
5
6
4
5
0
4
01001010010101100100010100000100
Solution to Problem 2.49 (page 156)
This exercise helps you think about what numbers cannot be represented exactly
in ﬂoating point.
A. The number has binary representation 1, followed by n zeros, followed by 1,
giving value 2n+1 + 1.
B. When n = 23, the value is 224 + 1 = 16,777,217.
Solution to Problem 2.50 (page 157)
Performing rounding by hand helps reinforce the idea of round-to-even with
binary numbers.
Original
Rounded
10.1112
2 7
8
11.0
3
11.0102
3 1
4
11.0
3
11.0002
3
11.0
3
10.1102
2 3
4
11.0
3
Solution to Problem 2.51 (page 158)
A. Looking at the nonterminating sequence for 1
10, we see that the 2 bits to the
right of the rounding position are 1, so a better approximation to 1
10 would be
obtained by incrementing x to get x′ = 0.000110011001100110011012, which
is larger than 0.1.
B. We can see that x′ −0.1 has binary representation
0.0000000000000000000000000[1100]
