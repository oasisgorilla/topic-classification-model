Section 1.8
Systems Communicate with Other Systems Using Networks
57
Figure 1.14
A network is another I/O
device.
CPU chip
Register file
PC
ALU
Bus interface
I/O
bridge
System bus
Memory bus
Main
memory
I/O bus
Expansion slots
Disk
controller
Network
adapter
Network
Graphics
adapter
Monitor
Mouse Keyboard
USB
controller
Disk
1.User types
“hello” at the
keyboard
5. Client prints
“hello, world\n”
string on display
2. Client sends “hello”
string to telnet server
4. Telnet server sends
“hello, world\n” string
to client
3. Server sends “hello”
string to the shell, which
runs the hello program
and passes the output
to the telnet server
Local
telnet
client
Remote
telnet
server
Figure 1.15
Using telnet to run hello remotely over a network.
Returning to our hello example, we could use the familiar telnet application
to run hello on a remote machine. Suppose we use a telnet client running on our
local machine to connect to a telnet server on a remote machine. After we log in
to the remote machine and run a shell, the remote shell is waiting to receive an
input command. From this point, running the hello program remotely involves
the ﬁve basic steps shown in Figure 1.15.
After we type in the hello string to the telnet client and hit the enter key,
the client sends the string to the telnet server. After the telnet server receives the
string from the network, it passes it along to the remote shell program. Next, the
remote shell runs the hello program and passes the output line back to the telnet
server. Finally, the telnet server forwards the output string across the network to
the telnet client, which prints the output string on our local terminal.
This type of exchange between clients and servers is typical of all network
applications. In Chapter 11 you will learn how to build network applications and
apply this knowledge to build a simple Web server.
