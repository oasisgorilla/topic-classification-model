17
CHAPTER  03    위장술
new를 오버로드하라 
“new” 연산자를 오버로드하라. 이는 +-/*를 오버로드하는 것보다 훨씬 위험하다. 
기존 함수를 뭔가 다른 기능(그러나 오브젝트의 기능에 필수적인 함수이므로 변경
하기 쉽지 않다)으로 오버로드한다면 큰 혼란을 야기할 수 있다. 사용자가 동적 인
스턴스를 생성할 때에 온전한 인스턴스가 아닌 잘려나간 인스턴스 조각만 얻게 하
는 것이 핵심이다. “New”라는 멤버 변수를 추가하므로 대소문자를 이용한 혼란 기
법을 가미할 수 있다. 
#define 
C++의 소스코드 판독을 어렵게 하는데 #define의 활용도는 무궁무진해서 이에 
대한 내용만 따로 집필할 수 있을 정도다. 소문자로 된 #define 변수로 원래 변수
를 대체할 수 있다. 선처리 함수에는 절대 파라미터를 사용하지 말아야 한다. 전역 
#define으로 원하는 모든 기능을 수행하자. 누군가는 #define을 활용해서 실제 
컴파일이 이루어질 때까지 CPP를 다섯 번 통과하게 만들었다고 한다. 필자가 들어
본 사례 중 가장 창의적인 활용방법이다. 똘똘하게 define과 ifdef를 사용해 각 헤
더 파일에서 몇 번이나 해당 구문을 include했느냐에 따라 결과가 달라지게 할 수 
있고, 이로써 코드는 혼란의 경지에 이르게 된다. 
#ifndef DONE 
#ifdef TWICE 
// 세 번째 정의 내용 
void g(char* str); 
#define DONE 
#else // TWICE 
#ifdef ONCE 
