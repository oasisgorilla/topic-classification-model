934
Chapter 10
System-Level I/O
Figure 10.4 shows the code for rio_readn and rio_writen. Notice that each
function manually restarts the read or write function if it is interrupted by the
return from an application signal handler. To be as portable as possible, we allow
for interrupted system calls and restart them when necessary.
10.5.2
Rio Buffered Input Functions
Suppose we wanted to write a program that counts the number of lines in a text ﬁle.
How might we do this? One approach is to use the read function to transfer 1 byte
at a time from the ﬁle to the user’s memory, checking each byte for the newline
character. The disadvantage of this approach is that it is inefﬁcient, requiring a
trap to the kernel to read each byte in the ﬁle.
A better approach is to call a wrapper function (rio_readlineb) that copies
the text line from an internal read buffer, automatically making a read call to reﬁll
the buffer whenever it becomes empty. For ﬁles that contain both text lines and
binary data (such as the HTTP responses described in Section 11.5.3), we also
provide a buffered version of rio_readn, called rio_readnb, that transfers raw
bytes from the same read buffer as rio_readlineb.
#include "csapp.h"
void rio_readinitb(rio_t *rp, int fd);
Returns: nothing
ssize_t rio_readlineb(rio_t *rp, void *usrbuf, size_t maxlen);
ssize_t rio_readnb(rio_t *rp, void *usrbuf, size_t n);
Returns: number of bytes read if OK, 0 on EOF, −1 on error
The rio_readinitb function is called once per open descriptor. It associates the
descriptor fd with a read buffer of type rio_t at address rp.
The rio_readlineb function reads the next text line from ﬁle rp (including
the terminating newline character), copies it to memory location usrbuf, and
terminates the text line with the NULL (zero) character. The rio_readlineb
function reads at most maxlen-1 bytes, leaving room for the terminating NULL
character. Text lines that exceed maxlen-1 bytes are truncated and terminated
with a NULL character.
The rio_readnb function reads up to n bytes from ﬁle rp to memory location
usrbuf. Calls to rio_readlineb and rio_readnb can be interleaved arbitrarily
on the same descriptor. However, calls to these buffered functions should not be
interleaved with calls to the unbuffered rio_readn function.
You will encounter numerous examples of the Rio functions in the remainder
of this text. Figure 10.5 shows how to use the Rio functions to copy a text ﬁle from
standard input to standard output, one line at a time.
Figure 10.6 shows the format of a read buffer, along with the code for the
rio_readinitb function that initializes it. The rio_readinitb function sets up
an empty read buffer and associates an open ﬁle descriptor with that buffer.
