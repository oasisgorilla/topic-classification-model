#define
C++의 소스코드 판독을 어렵게 하는데 #define의 활용도는 무궁무진해서 이에
대한 내용만 따로 집필할 수 있을 정도다. 소문자로 된 #define 변수로 원래 변수
를 대체할 수 있다. 선처리 함수에는 절대 파라미터를 사용하지 말아야 한다. 전역
#define으로 원하는 모든 기능을 수행하자. 누군가는 #define을 활용해서 실제
컴파일이 이루어질 때까지 CPP를 다섯 번 통과하게 만들었다고 한다. 필자가 들어
본 사례 중 가장 창의적인 활용방법이다. 똘똘하게 define과 ifdef를 사용해 각 헤
더 파일에서 몇 번이나 해당 구문을 include했느냐에 따라 결과가 달라지게 할 수
있고, 이로써 코드는 혼란의 경지에 이르게 된다.
#ifndef DONE
#ifdef TWICE
// 세 번째 정의 내용
void g(char* str);
#define DONE
#else // TWICE
#ifdef ONCE
// 두 번째 정의 내용
void g(void* str);
#define TWICE
#else // ONCE
// 첫 번째 정의 내용
void g(std::string str);
#define ONCE
#endif // ONCE
#endif // TWICE
#endif // DONE
이제 얼마나 많이 헤더를 include했느냐에 따라 결과가 달라지므로 g( ) 함수에
char*를 전달해 호출하면 어떤 재미있는 일이 벌어지는지 구경하는 일만 남았다.