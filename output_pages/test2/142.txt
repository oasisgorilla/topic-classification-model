변기 배관
어떤 경우에도 함수나 프로시저가 한 화면에 모두 보이도록 하지 말아야 한다. 간
단한 루틴에는 아래 설명하는 기법을 사용하자.
일반적으로 코드의 논리적인 블록을 구분하는 데 빈 줄을 사용한다. 우리 코드의
모든 라인은 각각이 논리적인 블록이다. 따라서 모든 줄에 빈 줄을 추가한다.
주석을 코드 끝에 추가하지 말고 윗부분에 추가하라. 어쩔 수 없는 강요에 의해 코
드의 뒷부분에 추가해야만 하는 상황이라면 전체 파일에서 가장 긴 줄을 찾아 10
개의 공백을 넣고 모든 end-of-line 주석을 왼쪽 정렬한다.
프로시저 윗부분의 주석에 사용할 템플릿은 적어도 15줄 이상이어야하고 빈줄도
자유롭게 추가한다. 아래는 간단한 예제 템플릿이다.
/*
/* 프로시저 이름:
/*
/* 원래 프로시저 이름:
/*
/* 저자:
/*
/* 생성일:
/*
/* 수정일:
/*
/* 수정한 사람:
/*
/* 원래 파일명:
/*
/* 목적:
/*
/* 의도:
/*
/* 직함:
/*
/* 사용한 클래스:
/*
/* 상수:
/*
/* 지역변수:
/*
/* 파라미터:
/*
/* 만든 날짜:
/*
/* 목적:
*/
문서에 여러 번 중복 정보를 넣는 기법을 사용하면 해당 정보를 최신으로 유지하기
어려워진다. 이를 순진하게 믿는 유지보수 프로그래머는 금방 혼란에 빠질 것이다.