감싸고, 감싸고, 감싸라
우리가 구현하지 않은 코드를 우리 메소드에 사용해야 할 때에는 다른 더러운 코드
에 우리 코드가 오염되지 않도록 적어도 한 번 이상 래퍼 레이어를 사용해야 한다.
어쩌면 다른 부분을 작성한 프로그래머도 언젠가 모든 메소드의 이름을 자기 마음
대로 바꾸어 버릴지 모를 일이다. 그럼 우리는 어떻게 대처해야 할까? 이러한 경우
래퍼를 만들어 우리 코드를 보호하거나 VAJ로 전체적인 이름 변경을 처리할 수 있
다. 한편 이는 간접적으로 래퍼 레이어를 통해 어떤 멍청한 일을 저지르기 전에 그
를 제거할 구실을 제공하는 기회로 삼을 수 있다. 자바의 주요 문제점 가운데 하나
는 별다른 작업을 수행하지 않고 다른 메소드의 같은 이름 또는 밀접히 연관된 이
름을 호출하는 더미 래퍼 메소드 없이는 간단한 문제도 해결하기 힘들다는 점이다.
즉, 우리는 아무 작업도 하지 않는 4단계의 래퍼를 쥐도 새도 모르게 만들 수 있다.
소스코드 혼잡성을 극대화하려면 각 단계에서 메소드 이름을 변경하고, 랜덤으로
유의어 사전에서 동의어를 선택할 수 있다. 이와 같은 방법을 이용해 마치 뭔가가 일
어나고 있다는 환상을 심어줄 수 있다. 나중에 이름을 변경하면서 프로젝트 용어의
일관성을 깨뜨릴 가능성도 커진다. 코드에서 래퍼의 각 단계를 건너뛰도록 해둠으
로써 혹시라도 우리가 만든 여러 단계를 제거하려는 시도를 방지할 수 있다.