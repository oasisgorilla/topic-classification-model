효율적인 오버로드 연산자 선택하기
C++에서 +, -, *, / 등과 같은 연산자를 사칙 연산의 의미와 전혀 관련 없는 동작
을 하도록 오버로드하자. 스트로우스트 룹Stroustroup도 쉬프트 연산자를 I/O에 사
용했는데 우리도 그처럼 창의적이지 못할 이유가 없지 않은가? +를 오버로드할 때
에는 “i = i + 5;”가 “i += 5;”와 같은 의미를 갖지 않도록 해야 한다. 최첨단 연산자
혼란 오버로딩 기법을 소개하겠다. 클래스의 ‘!’ 연산자를 오버로드하면서 뭔가를
뒤집거나 부정하는 동작과는 아무 관련이 없는 동작을 하게 하는 것이 핵심이다.
‘!’ 연산자가 정수를 반환하게 한다. ‘!’를 논리 연산자로 사용하려면 ‘! !’로 표기해
야 한다. 그러나 ‘!’ 연산 자체가 로직을 변경시키므로 결국 하나를 더 붙여서 ‘! ! !’
를 사용해야 한다. 여기서 말하는 ! 연산자는 불린 값 0이나 1을 반환하는 연산자
로 비트단위의 논리 부정 연산자 ~와 혼동하지 말자.