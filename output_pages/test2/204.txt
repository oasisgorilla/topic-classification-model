실생활 예제
스승님께서 작성하신 실생활 예제를 보여주겠다. 하나의 C 함수에 그가 사용한 여
러 기법을 살펴보자.
void* Realocate(void*buf, int os, int ns)
{
void*temp;
temp = malloc(os);
memcpy((void*)temp, (void*)buf, os);
free(buf); buf = malloc(ns);
memset(buf, 0, ns);
memcpy((void*)buf, (void*)temp, ns);
return buf;
}
1. 자세히 보면 Realocate의 철자가 부정확하다. 창의적인 철자법의 힘을
얕보지 말라.
2. 아무런 이유 없이 입력 버퍼를 임시 복사본을 만든다.
3. 이유 없이 형을 변환한다. Memcpy()는 (void*)형을 매개변수로
받으므로 이미 (void*)형을 사용하더라도 무조건 형변환한다.
4. temp를 해제할 필요는 없다. 이렇게 작은 메모리 누수의 효과는
미미하기 때문에 며칠 동안 프로그램을 돌려도 끄떡없는 경우가 많다.
5. 만약을 대비해서 버퍼에서 필요한 데이터 이상을 복사하라.
유닉스에서는 코어 덤프가 발생할 것이다.
6. 위 코드에서 os는 “old size”를, ns는 “new size”를 의미하는 듯하다.
7. 표준 라이브러리에 이미 있는 간단한 함수는 다시 만든다.
8. buf를 할당하고 0으로 memset한다. 누군가 ANSI 스펙을 변경할 가능성
이 있으므로 calloc()을 사용하는 것은 위험하다(일단 어차피 buf 크기와
동일한 데이터를 복사한다는 사실은 신경쓰지 말자).