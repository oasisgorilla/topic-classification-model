1 | 일반 규칙
Quidquid latine dictum sit, altum sonatur.
_라틴어에는 뭔가 특별한 것이 있다.
유지보수를 담당하는 프로그래머를 좌절시키려면 그가 생각하는 방식을 이해해야
한다. 유지보수 담당 프로그래머는 우리가 만든 거대한 프로그램을 넘겨받는다. 그
가 전체 코드를 읽기는 힘들기 때문에 해당 프로그램에 대한 이해도가 우리보다는
낮은 편이다. 아마도 그는 가능한 한 빨리 수정할 곳을 찾아내어 코드를 수정한 다
음, 해당 수정으로 인한 부작용이 없는지 확인하고 작업을 마무리하려 할 것이다.
유지보수 프로그래머는 화장실에 걸린 두루마리 휴지관을 통해 우리 코드를 살펴
보는 것과 같은 상황에 처해있다. 그가 휴지관을 통해 우리 코드를 보면서 전체적
인 그림을 그려낼 수 없게 하는 것이 핵심이다. 그가 찾고 있는 코드를 가능한 찾기
어렵게 만들어야 한다. 더욱 중요한 것은 그가 안심하고 코드를 무시할 수 있도록
가능한 한 서툴게 코드를 작성해야 한다는 점이다.
프로그래머는 규약convention을 통해 안심하는 습성이 있다. 간혹 조금이라도 규약
위반을 발견하면 돋보기를 들고 코드 전체 라인을 샅샅이 조사할 가능성이 크다.
언어의 모든 기능이 코드 유지보수를 어렵게 만든다고 생각할지 모르지만, 이는 사
실이 아니다. 오직 언어의 기능을 적절하게 오용해야 유지보수가 어려운 코드를 만
들 수 있다.