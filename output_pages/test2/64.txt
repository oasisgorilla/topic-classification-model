디자인 문서의 적절한 활용
상당히 복잡한 알고리즘을 구현해야 할 때에는 코딩을 하기 전에 디자인을 확실하
게 해야 한다는 고전 소프트웨어 엔지니어링 원칙을 지켜야 한다. 상당히 복잡한
알고리즘의 각 단계에 대한 설명을 포함할 수 있도록 매우 세밀하게 디자인 문서를
작성한다. 이 문서를 세부적으로 만들수록 좋다.
디자인 문서에서 알고리즘을 구조화된 여러 단계로 나눠서 각 문단에 자동으로
계층적인 번호를 추가할 수 있다. 헤딩은 적어도 5단계로 만들자. 가능하면 구조
를 잘게 나눔으로써 최종 결과물이 나왔을 때에 500개가 넘는 문단에 자동으로
번호를 추가할 정도가 돼야 한다. 다음은 실생활에 사용하는 어느 문단의 예다.
1.2.4.6.3.13 - 선택한 마이그레이션을 적용했을 때 발생하는 모든 효과를 표시하
라 (간단한 의사코드는 생략).
그리고...(이제 본격적인 혼란의 세계로 빠져든다) 코드를 작성할 때에는 각 문단에
대응하는 전역 함수를 만든다.
Act1_2_4_6_3_13()
디자인 문서에 나와있으므로 위 함수에 대한 문서화는 따로 필요치 않다!
디자인 문서의 번호는 자동으로 매겨지는 것이므로 변경이 발생했을 때 이를 일일
이 코드에 반영하는 것은 정말 어렵다(함수명은 자동으로 변경되는 것이 아니므
로). 그럼 큰일 아닌가? 우리는 문서를 최신으로 유지하지 않으면 되므로 걱정할 것
없다. 오히려 문서 추적에 필요한 사항을 모두 파괴하는 것이 좋다.
운이 좋다면, 우리의 뒤를 이어 작업할 사람은 지금은 멸종한 286 컴퓨터와 먼지
가 수북이 쌓여있는 창고 선반 뒤에 숨겨진 앞뒤가 맞지 않는 초안 한 두 개를 건질
수 있을 것이다. 