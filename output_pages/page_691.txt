690
Chapter 6
The Memory Hierarchy
7
for (i = 0; i < 4; i++) {
8
for (j = 0; j < 4; j++) {
9
dst[j][i] = src[i][j];
10
}
11
}
12
}
Assume this code runs on a machine with the following properties:
. sizeof(int) = 4.
. The src array starts at address 0 and the dst array starts at address 64
(decimal).
. There is a single L1 data cache that is direct-mapped, write-through, write-
allocate, with a block size of 16 bytes.
. The cache has a total size of 32 data bytes, and the cache is initially empty.
. Accesses to the src and dst arrays are the only sources of read and write
misses, respectively.
A. For each row and col, indicate whether the access to src[row][col] and
dst[row][col] is a hit (h) or a miss (m). For example, reading src[0][0]
is a miss and writing dst[0][0] is also a miss.
dst array
src array
Col. 0
Col. 1
Col. 2
Col. 3
Col. 0
Col. 1
Col. 2
Col. 3
Row 0
m
Row 0
m
Row 1
Row 1
Row 2
Row 2
Row 3
Row 3
6.35 ◆◆
Repeat Problem 6.34 for a cache with a total size of 128 data bytes.
dst array
src array
Col. 0
Col. 1
Col. 2
Col. 3
Col. 0
Col. 1
Col. 2
Col. 3
Row 0
Row 0
Row 1
Row 1
Row 2
Row 2
Row 3
Row 3
6.36 ◆◆
This problem tests your ability to predict the cache behavior of C code. You are
given the following code to analyze:
1
int x[2][128];
2
int i;
