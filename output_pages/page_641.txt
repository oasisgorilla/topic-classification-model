640
Chapter 6
The Memory Hierarchy
100,000,000.0
10,000,000.0
1,000,000.0
100,000.0
10,000.0
1,000.0
100.0
10.0
1.0
0.1
0.0
1985 1990 1995 2000 2003 2005
2010 2015
Year
Time (ns)
Disk seek time
SSD access time
DRAM access time
SRAM access time
CPU cycle time
Effective CPU cycle time 
Figure 6.16
The gap between disk, DRAM, and CPU speeds.
throughput, with multiple processor cores issuing requests to the DRAM and disk
in parallel.
The various trends are shown quite clearly in Figure 6.16, which plots the
access and cycle times from Figure 6.15 on a semi-log scale.
As we will see in Section 6.4, modern computers make heavy use of SRAM-
based caches to try to bridge the processor–memory gap. This approach works
because of a fundamental property of application programs known as locality,
which we discuss next.
Practice Problem 6.6 (solution page 698)
Using the data from the years 2005 to 2015 in Figure 6.15(c), estimate the year
when you will be able to buy a petabyte (1015 bytes) of rotating disk storage for
$200. Assume actual dollars (no inﬂation).
6.2
Locality
Well-written computer programs tend to exhibit good locality. That is, they tend
to reference data items that are near other recently referenced data items or
that were recently referenced themselves. This tendency, known as the principle
of locality, is an enduring concept that has enormous impact on the design and
performance of hardware and software systems.
Locality is typically described as having two distinct forms: temporal locality
and spatial locality. In a program with good temporal locality, a memory location
that is referenced once is likely to be referenced again multiple times in the near
future. In a program with good spatial locality, if a memory location is referenced
