10
CHAPTER  02    이름짓기
활용된 예를 들면 “a_crszkvc30Last-NameCol” 같은 변수를 만들 수 있다. 유지
보수 엔지니어 팀 전체가 이 변수명을 “이 변수는 const이고 레퍼런스 형식으로 함
수 매개변수로 사용되는데 테이블의 기본 키 가운데 하나인 ‘LastName’이라는 이
름의 Varchar[30] 형식의 데이터베이스 열에서 가져온 데이터를 담고 있다”라고 
해독하는데 3일이 걸렸다. “모든 변수는 public이어야 한다”라는 규칙을 이 기법
에 접목하면 수천 라인의 코드를 대체할 수 있는 막강한 파워를 발휘할 수 있다!
사람의 뇌는 동시에 오직 7개의 정보를 유지할 수 있다는 원칙을 마음껏 활용하자. 
위 규칙을 따른다는 것은 다음과 같은 코드를 작성한다는 것을 의미한다.
1.	 
하나의 할당문에 14개의 형식과 이름 정보를 사용한다.
2. 	 
하나의 함수가 3개의 매개변수를 전달하고 29개의 형식과 이름 정보를 
가진 결과값을 할당한다.
3. 	 
적당히 복잡한 중첩 구조를 이용하면 단기 기억의 한계를 가볍게 초과할 
수 있다. 특히 유지보수 프로그래머가 블록의 시작과 끝을 한눈에 확인할 
수 없는 경우에 효과가 커진다.
4. 	 
유지보수 프로그래머가 각 블록을 한 화면에 확인하기 어렵게 만들 수 
있다면 중첩 구조체로도 단기 기억 메모리 한계를 간단히 초과할 수 있다.
헝가리안 표기법의 변형
헝가리안 표기법을 활용한 또 다른 술책으로 “변수명은 그대로 사용하되 변
수 형식을 바꾸는” 방법이 있다. 이 방법은 윈도 응용프로그램이 Win16 
WndProc(HWND hW, WORD wMsg, WORD wParam, LONG lParam)에서 
Win32 WndProc(HWND hW, UINT wMsg, WPARAM wParam, LPARAM 
lParam)으로 변경되는 경우와 같은 상황에서 어김없이 등장한다. 여기서 w는 
words임을 가리키는 듯하지만 실제로는 long을 가리킨다. Win64로 응용프로그
램을 변경하는 경우 이 사실이 더욱 명확해진다. Win64에서는 파라미터가 64비트
This eBook is licensed to 남궁진(jinvicky@naver.com). Personal use only
