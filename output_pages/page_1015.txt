1014
Chapter 12
Concurrent Programming
The select function manipulates sets of type fd_set, which are known as de-
scriptor sets. Logically, we think of a descriptor set as a bit vector (introduced in
Section 2.1) of size n:
bn−1, . . . , b1, b0
Each bit bk corresponds to descriptor k. Descriptor k is a member of the descriptor
set if and only if bk = 1. You are only allowed to do three things with descriptor
sets: (1) allocate them, (2) assign one variable of this type to another, and (3)
modify and inspect them using the FD_ZERO, FD_SET, FD_CLR, and FD_
ISSET macros.
For our purposes, the select function takes two inputs: a descriptor set
(fdset) called the read set, and the cardinality (n) of the read set (actually the
maximum cardinality of any descriptor set). The select function blocks until at
least one descriptor in the read set is ready for reading. A descriptor k is ready
for reading if and only if a request to read 1 byte from that descriptor would not
block. As a side effect, select modiﬁes the fd_set pointed to by argument fdset
to indicate a subset of the read set called the ready set, consisting of the descriptors
in the read set that are ready for reading. The value returned by the function
indicates the cardinality of the ready set. Note that because of the side effect, we
must update the read set every time select is called.
The best way to understand select is to study a concrete example. Figure 12.6
shows how we might use select to implement an iterative echo server that also
accepts user commands on the standard input. We begin by using the open_
listenfd function from Figure 11.19 to open a listening descriptor (line 16), and
then using FD_ZERO to create an empty read set (line 18):
listenfd
stdin
read_set (∅):
0
3
0
2
0
1
0
0
Next, in lines 19 and 20, we deﬁne the read set to consist of descriptor 0 (standard
input) and descriptor 3 (the listening descriptor), respectively:
listenfd
stdin
read_set ({0,3}):
1
3
0
2
0
1
1
0
At this point, we begin the typical server loop. But instead of waiting for a
connection request by calling the accept function, we call the select function,
which blocks until either the listening descriptor or standard input is ready for
reading (line 24). For example, here is the value of ready_set that select would
return if the user hit the enter key, thus causing the standard input descriptor to
