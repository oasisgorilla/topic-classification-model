Section 10.3
Opening and Closing Files
929
Locations in the directory hierarchy are speciﬁed by pathnames. A pathname
is a string consisting of an optional slash followed by a sequence of ﬁlenames
separated by slashes. Pathnames have two forms:
. An absolute pathname starts with a slash and denotes a path from the root
node. For example, in Figure 10.1, the absolute pathname for hello.c is
/home/droh/hello.c.
. A relative pathname starts with a ﬁlename and denotes a path from the current
working directory. For example, in Figure 10.1, if /home/droh is the current
working directory, then the relative pathname for hello.c is ./hello.c. On
the other hand, if /home/bryant is the current working directory, then the
relative pathname is ../home/droh/hello.c.
10.3
Opening and Closing Files
A process opens an existing ﬁle or creates a new ﬁle by calling the open function.
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
int open(char *filename, int flags, mode_t mode);
Returns: new ﬁle descriptor if OK, −1 on error
The open function converts a filename to a ﬁle descriptor and returns the de-
scriptor number. The descriptor returned is always the smallest descriptor that is
not currently open in the process. The flags argument indicates how the process
intends to access the ﬁle:
O_RDONLY. Reading only
O_WRONLY. Writing only
O_RDWR. Reading and writing
For example, here is how to open an existing ﬁle for reading:
fd = Open("foo.txt", O_RDONLY, 0);
The flags argument can also be ored with one or more bit masks that provide
additional instructions for writing:
O_CREAT. If the ﬁle doesn’t exist, then create a truncated (empty) version
of it.
O_TRUNC. If the ﬁle already exists, then truncate it.
O_APPEND. Before each write operation, set the ﬁle position to the end of
the ﬁle.
