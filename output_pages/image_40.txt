26
CHAPTER  05    프로그램 디자인
예의를 지키고 무턱대고 주장(Assert)하는 일을 피하라 
assert() 메커니즘은 3일짜리 버그 축제를 10분짜리로 만들어 버릴 수 있으므로 
피해야 한다. 
캡슐화를 멀리하라 
효율성 측면을 고려할 때 캡슐화를 멀리해야 한다. 메소드 호출자는 메소드가 어떻
게 동작하는지를 알 권리가 있다. 
복사하고 수정하라 
효율성이라는 명목으로 잘라내기/붙이기/복사하기/수정하기를 남발하자. 이 방식
은 작은 재사용 가능한 모듈 여럿을 사용하는 것보다 실행 속도가 빠르다는 장점이 
있다. 특히 이 방식은 우리가 작성하는 코드 라인 수를 업무 진행 척도로 여기는 곳
에서 일할 때 유용하다. 
정적 배열을 사용하라 
라이브러리의 모듈에 이미지를 저장할 배열이 필요한 경우에는 정적 배열을 선언
해야 한다. 아무도 512 x 512 크기 이상의 이미지를 사용하지 않을 것이므로 크기
가 고정된 배열도 좋다. 정확성을 높일 수 있도록 double 배열을 사용하는 것도 바
람직하다. 이렇게 하면, 2메가 크기의 정적 배열을 효과적으로 숨길 수 있다. 클라
이언트는 우리가 만든 루틴을 한번도 수행하지 않았음에도 미친 것처럼 허우적대
고 프로그램은 결국 클라이언트의 메모리를 초과할 것이다. 
더미 인터페이스 
“WrittenByMe”와 같은 빈 인터페이스를 만들고 모든 클래스에서 “WrittenByMe” 
인터페이스를 구현하도록 하자. 그리고 우리가 사용하는 자바의 내장 클래스 래퍼 
클래스를 만들자. 핵심은 우리 프로그램의 모든 오브젝트가 위 인터페이스를 구현
하게 하는 것이다. 마지막으로 모든 메소드를 직접 구현하므로 매개변수와 반환 형
식을 WrittenByMe가 구현하는 것이 목적이다. 이 기법을 사용하면 특정 메소드
This eBook is licensed to 남궁진(jinvicky@naver.com). Personal use only
