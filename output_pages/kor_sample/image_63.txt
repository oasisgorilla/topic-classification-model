49
CHAPTER  07    테스트
우리가 해야 할 일은 여권을 항상 가까이에 소지하면서 상황을 예의주시하는 것이다.
절대 테스트 케이스를 만들지 않는다
코드 커버리지나 패스 커버리지 테스트를 절대 수행하지 말자. 자동화 테스트는 
겁쟁이나 하는 짓이다. 우리 루틴의 90%에 해당하는 기능을 찾고, 전체 테스트의 
90%를 이러한 기능 확인에 사용한다. 결과적으로 이 기법으로는 우리 코드의 약 
60% 정도만 검증을 한 셈이 되고 40% 정도의 노력을 절약할 수 있다. 절약한 시
간으로 프로젝트의 백엔드 계획을 수립할 수 있다. 멋진 “마케팅 기능”이 동작하지 
않는다는 사실을 알아차리기 전에 회사를 조용히 떠날 수 있다면 정말 짜릿한 경험
이 될 것이다. 크고 유명한 소프트웨어 회사는 이런 방식으로 코드를 테스트한다. 
따라서 위 방법을 사용할 것을 추천한다. 어떤 이유에서인지 모르겠지만 혹시 위 
계획을 실천하지 못하고 아직 회사에 남아있어야 한다면 계속해서 이 문서를 읽기 
바란다.
겁쟁이 전용 테스트
용감한 코더는 이 단계를 건너뛴다. 상사를 무서워하고, 직장을 잃을까 두려워하
고, 고객의 불평 메일을 받거나 고소당하는 일을 걱정하는 프로그래머가 너무 많
다. 이러한 두려움 때문에 행동에 제약을 받고, 생산성이 떨어진다는 것은 누구나 
아는 사실이다. 연구에 따르면 테스트 단계를 없애는 것이 관리자로 하여금 출시일
을 미리 결정할 수 있게 하는 등 계획 단계부터 많은 도움이 된다. 두려움이 없어진
다면 혁신과 실험정신이 창궐할 수 있다. 프로그래머는 코드를 생산하는 데 주력할 
수 있고, 헬프 데스크와 기존 유지보수 그룹이 협력해서 디버깅을 담당할 수 있다. 
우리의 코딩 능력을 온전히 믿는다면 테스트 따위는 더 이상 불필요하다. 논리적으
로 생각해보면 테스트라는 것은 감정적인 자신감 결여 문제일 뿐, 기술적으로 문제
를 해결하지도 않는다는 점을 바보라도 눈치챌 수 있다. 자신감 결여 문제는 테스
트 과정을 완전 제거하고 프로그래머를 자신감 회복 과정에 보냄으로 해결할 수 있
다. 테스트를 하려면 프로그램을 변경할 때마다 테스트를 해야 한다. 프로그래머를 
