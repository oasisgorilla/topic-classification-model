41
CHAPTER  06    코드 혼잡화
싸는 하나의 try/catch를 사용(main에서)하고 문제가 생겼을 때 System.exit()
를 호출함으로써 프로그램을 단순하게 만들 수 있다. 예외를 발생시킬 수 있는지 
여부와 관계없이 모든 메소드 헤더에 표준 throws구문을 추가하자. 
언제 예외를 사용해야 하는가? 
예외가 발생하지 않는 상황에서만 예외를 사용하라. 주기적으로 루프를 종료하면
서 ArrayIndexOutOfBoundsException를 발생시킬 수 있다. 그리고 아무 일도 
없는 것처럼 예외가 발생한 메소드에서 표준 결과값을 넘긴다. 
스레드에 떠넘기라 
제목 그대로 행동하라. 
변호사 코드 
뉴스 그룹에서 까다로운 코드가 어떻게 수행돼야 하는지를 두고 논쟁을 하는 경우
가 있다(예를 들어, a=a++;, f(a++,a++);). 이와 같이 논쟁이 벌어지는 코드를 우
리 프로그램에 자유롭게 사용하자. 아래와 같은 선/후 감쇠 코드를 어떻게 처리해
야 하는지는 언어 스펙에서 정의하지 않는다. 
*++b ? (*++b + *(b-1)) 0 
따라서 컴파일러마다 각자 임의로 위 수식을 평가한다. 비슷한 방법으로 모든 공백
을 없애서 C와 자바의 복잡한 토큰화 규칙을 이용할 수도 있다. 
중간 반환문 
goto를 사용하지 않고, 중간에 반환하지 않으며, label을 사용하지 않는다는 규칙
을 엄격히 지켜야 한다. 그러나 우리가 최소한 5단계 이상으로 중첩하는 if/else문
을 만들 수 있다면 이 규칙을 꼭 지키지 않아도 된다. 
