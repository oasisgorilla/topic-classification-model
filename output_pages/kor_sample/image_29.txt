15
CHAPTER  03    위장술
조체를 정의하고 EverythingYoullEv-erNeed와 같이 똘똘한 이름을 붙여준다. 
모든 함수가 이 구조체에 대한 포인터(포인터명은 handle이라고 함으로써 혼란
을 더할 수 있다)를 갖게 할 수 있다. 실제로는 “handle”을 통해 전역 변수를 마음
껏 사용하면서 다른 이에게는 우리가 전역 변수를 사용하지 않는다는 인상을 줄 수 
있다. 전역 변수를 사용하는 모든 코드에서 정적 변수를 선언하는 것도 좋은 방법이
다. 
동의어로 인스턴스 숨기기 
유지보수 프로그래머가 뭔가를 수정하고 그로 인해 발생할 수 있는 부수효과를 확인
할 때 일반적으로 프로그램 전체에서 사용된 변수명을 검색할 것이다. 동의어 사용
이라는 간단한 방법으로 이러한 유지보수 프로그래머의 시도를 좌절시킬 수 있다. 
#define xxx global_var // in file std.h 
#define xy_z xxx // in file ..\other\substd.h 
#define local_var xy_z // in file ..\codestd\inst.h 
위 정의를 서로 다른 include 파일에 흩어놓아야 한다. 특히 include 파일이 서
로 다른 디렉터리에 위치한 경우 효과적이다. 가능한 모든 범위에서 이름을 재사용
하는 기법도 있다. 컴파일러는 정확하게 모든 이름을 구별할 수 있겠지만, 단세포
적인 텍스트 검색기로는 이름을 구별하기 어려울 것이다. 불행하게도 SCIDSource 
Code in Database가 점점 발전하면서 편집기가 컴파일러처럼 범위 규칙을 이해하게 
되면 간단한 기법은 더 이상 사용할 수 없게 될 것이다. 
길고 비슷한 변수명 
변수명이나 클래스명은 되도록이면 길게 만들고 두 개 이상의 이름이 필요할 경우 
한 글자만 바꿔놓거나 대소문자만 다르게 한다. 변수명 swimmer와 swimner는 
좋은 예다. 대부분의 폰트로는 ilI1|나 oO08를 명확하게 구별하기 어렵다는 점을 
악용하자. 예를 들어, parselnt와 parseInt 혹은 D0Calc와 DOCalc를 명확히 구분
