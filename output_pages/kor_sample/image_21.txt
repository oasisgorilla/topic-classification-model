07
CHAPTER  02    이름짓기
소문자 I과 숫자 1은 닮았다 
Long 상수를 표현할 때 소문자 l을 사용해 보라. 예를 들어, 10l로 표기하면 10L
이 아닌 101로 착각하기 쉽다. uvw wW gq9 2z 5s il17|!j oO08 ’” ;,. m nn rn 
{[( )]} 등의 문자를 명확하게 구분해주는 글꼴을 멀리하자. 창의력을 발휘해보자. 
전역으로 사용한 이름을 지역에 재사용하라 
모듈 A에 전역 배열을 선언하고 같은 이름의 배열을 모듈 B의 헤더파일에 쥐도 새
도 모르게 선언하자. 그러면 십중팔구 B에 선언한 배열을 전역 배열로 착각할 것이
다. 물론 주석에 이와 같은 중복 선언이 있다는 사실을 알리는 행동은 삼가야 한다. 
함수의 선언과 구현의 재활용 
때로는 변수명을 정반대로 재활용해서 혼란을 야기하는 방법도 있다. 지역 변수 
A, B와 지역 함수 foo, bar를 선언한다고 가정하자. 일반적으로 A는 foo의 매개
변수로, B는 bar의 매개변수로 사용한다. 그러나 함수 선언을 실제 사용과 반대로 
foo(B)와 bar(A)로 정의한다. 이렇게 해서 같은 변수명을 다른 용도로 사용하는 것
처럼 만들 수 있다. 유지보수 프로그래머는 우리가 쳐놓은 혼란의 거미줄에서 빠져
나가기 힘들어진다. 
변수를 재사용하라 
변수 존재 범위 규칙이 허용한다면 아무 관련이 없는 기존의 변수명을 재사용해보
라. 하나의 임시 변수를 전혀 관련이 없는 다양한 상황에 사용할 수 있다(변수를 재
사용함으로써 스택 슬롯을 절약하는 것처럼 위장할 수 있다). 조금 더 사악한 방법
을 원한다면 변수 자체의 의미를 변형하는 기법을 이용하라. 코드의 길이가 매우 
긴 메소드의 가장 윗 부분에서 변수에 값을 할당한 다음 중간 어딘가에서 슬그머니 
변수의 의미를 바꿀 수 있다(예를 들어, 0기반 좌표를 1기반 좌표로 바꾸는 등). 물
론 이와 같은 변경을 문서로 만들어 놓는 실수를 범하지 않아야 한다. 
