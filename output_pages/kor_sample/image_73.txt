59
CHAPTER  11    잡다한 기법
11  |  잡다한 기법 
누군가에게 프로그램을 주면 하루 만에 그를 좌절시킬 수 있다. 그러나 프로그램을 
어떻게 사용하는지를 알려줌으로써 그를 평생 좌절시킬 수 있다. 
_아무개씨 
재컴파일하지 마라 
가장 사악한 기법부터 살펴보자. 컴파일에 성공해서 실행파일을 만들었다면, 각 모
듈에서 소스코드 몇 개를 수정하자. 그러나 이들 파일을 애써 재컴파일할 필요까진 
없다. 나중에 디버깅할 시간이 남았을 때 재컴파일하면 된다. 운이 지지리 없는 유
지보수 프로그래머가 몇 년 후에 코드를 수정하지만 프로그램이 제대로 동작할 리 
없다. 아마도 그녀는 자신이 수정한 뭔가에 문제가 있다고 생각할 것이다. 이와 같
은 기법으로 우리는 그녀를 몇 주 동안 바쁘게 만들 수 있다. 
디버거 차단 
줄을 길게 만들어서 디버거를 이용해서 한 줄씩 우리 코드를 이해하려는 사람을 좌
절시킬 수 있다. 특히 브레이크 포인트를 잡기 어렵게 if와 then을 한 줄에 모두 사
용하면 더욱 효과적이다. 그러면 분기문이 어느 문장을 수행하는 것인지 구별하기 
가 어려워진다. 
S.I. vs 미국식 단위 
엔지니어링 작업을 할 때 두 가지 방법으로 코드를 만들 수 있다. 하나는 모든 입력
을 S.I.(미터법) 단위를 사용하고 나중에 결과를 돌려줄 때에는 사람들이 이용하는 
단위로 변환할 수 있다. 다른 방법은 여러 단위를 다양하게 시스템 전체에서 혼합해 
사용하는 것이다. 물론 항상 두 번째 방법을 이용하는 것이 좋다. 그게 미국식이다! 
CANI 
상수 그리고 절대 끝나지 않는 개선작업. 우리가 코드를 “개선”하면 사용자도 업그
