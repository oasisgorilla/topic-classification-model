35
CHAPTER  05    프로그램 디자인
파일을 이용하자. 파라미터 파일 변수를 유지보수하려면 간단한 변수를 유지보수 
때보다 다섯 배나 많은 코드가 필요하다.
퉁퉁 부은 클래스
중요하지 않고 잘 알려지지 않은 메소드와 속성을 모든 클래스에 포함시킴으로써 
외부에 둔감한 클래스를 만들 수 있다. 일례로, 천체 기하학적 궤도를 정의하는 클
래스에 해수면 조류 스케쥴과 크레인Crane 날씨 모델을 구성하는 속성을 포함할 수 
있다. 이와 같은 기법으로 클래스에 수많은 기능을 정의할 수 있을 뿐만 아니라 시
스템에서 필요한 부분을 검색하는 작업을 서울에서 김서방 찾기처럼 힘들게 만들 
수 있다.
자식 클래스에게 양보하는 미덕
객체 지향 프로그래밍은 유지보수할 수 없는 코드를 작성하도록 하늘이 준 선물이
다. 클래스가 프로퍼티(멤버/메소드) 10개를 가지고 있다 가정하자. 베이스 클래
스는 하나의 프로퍼티를 갖고 있고, 베이스 클래스를 상속하는 클래스에서 한 개씩
만 속성을 추가하는 방식으로 9단계를 상속받도록 클래스 계층을 구성할 수 있다. 
가장 하위 클래스로 프로퍼티 10개를 전부 사용할 수 있다. 가능하다면 각 클래스 
선언을 다른 파일에 정의하는 것이 좋다. 이렇게 함으로써 INCLUDE나 USES 구
문을 팽창시키는 부수효과를 얻을 수 있고 유지보수 프로그래머는 자신의 편집기
에 더 많은 파일을 열어보아야 한다. 물론 적어도 각 서브클래스의 인스턴스를 한 
개 이상은 만들어야 함을 잊지 말자.
