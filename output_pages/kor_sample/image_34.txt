20
CHAPTER  04    문서화
문서화 템플릿의 적절한 활용 
함수 문서화 프로토타입을 이용해 자동으로 코드에 문서화 틀을 제공할 수 있다. 
이때 다른 함수(혹은 메소드나 클래스)에서 복사해서 사용하고 절대 필드에는 문서
화 틀을 사용하지 말아야 한다. 어쩔 수 없이 필드에 문서화 프로토타입을 사용해
야 한다면 모든 함수에서 같은 파라미터 이름을 사용하도록 하고 주의사항도 같게 
하자. 물론 이 주의사항이 현재 함수와 전혀 관련이 없는 것일수록 좋겠다. 
디자인 문서의 적절한 활용 
상당히 복잡한 알고리즘을 구현해야 할 때에는 코딩을 하기 전에 디자인을 확실하
게 해야 한다는 고전 소프트웨어 엔지니어링 원칙을 지켜야 한다. 상당히 복잡한 
알고리즘의 각 단계에 대한 설명을 포함할 수 있도록 매우 세밀하게 디자인 문서를 
작성한다. 이 문서를 세부적으로 만들수록 좋다. 
디자인 문서에서 알고리즘을 구조화된 여러 단계로 나눠서 각 문단에 자동으로 
계층적인 번호를 추가할 수 있다. 헤딩은 적어도 5단계로 만들자. 가능하면 구조
를 잘게 나눔으로써 최종 결과물이 나왔을 때에 500개가 넘는 문단에 자동으로 
번호를 추가할 정도가 돼야 한다. 다음은 실생활에 사용하는 어느 문단의 예다. 
1.2.4.6.3.13 - 선택한 마이그레이션을 적용했을 때 발생하는 모든 효과를 표시하
라 (간단한 의사코드는 생략). 
그리고...(이제 본격적인 혼란의 세계로 빠져든다) 코드를 작성할 때에는 각 문단에 
대응하는 전역 함수를 만든다. 
Act1_2_4_6_3_13() 
디자인 문서에 나와있으므로 위 함수에 대한 문서화는 따로 필요치 않다! 
디자인 문서의 번호는 자동으로 매겨지는 것이므로 변경이 발생했을 때 이를 일일
이 코드에 반영하는 것은 정말 어렵다(함수명은 자동으로 변경되는 것이 아니므
This eBook is licensed to 남궁진(jinvicky@naver.com). Personal use only
