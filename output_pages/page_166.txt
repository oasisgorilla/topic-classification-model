Homework Problems
165
logic, and arithmetic operations of C. In answering these problems, your code
must follow these rules:
. Assumptions
Integers are represented in two’s-complement form.
Right shifts of signed data are performed arithmetically.
Data type int is w bits long. For some of the problems, you will be given a
speciﬁc value for w, but otherwise your code should work as long as w is a
multiple of 8. You can use the expression sizeof(int)<<3 to compute w.
. Forbidden
Conditionals (if or ?:), loops, switch statements, function calls, and macro
invocations.
Division, modulus, and multiplication.
Relative comparison operators (<, >, <=, and >=).
. Allowed operations
All bit-level and logic operations.
Left and right shifts, but only with shift amounts between 0 and w −1.
Addition and subtraction.
Equality (==) and inequality (!=) tests. (Some of the problems do not allow
these.)
Integer constants INT_MIN and INT_MAX.
Casting between data types int and unsigned, either explicitly or im-
plicitly.
Even with these rules, you should try to make your code readable by choosing
descriptive variable names and using comments to describe the logic behind your
solutions. As an example, the following code extracts the most signiﬁcant byte
from integer argument x:
/* Get most significant byte from x */
int get_msb(int x) {
/* Shift by w-8 */
int shift_val = (sizeof(int)-1)<<3;
/* Arithmetic shift */
int xright = x >> shift_val;
/* Zero all but LSB */
return xright & 0xFF;
}
2.61 ◆◆
Write C expressions that evaluate to 1 when the following conditions are true and
to 0 when they are false. Assume x is of type int.
A. Any bit of x equals 1.
B. Any bit of x equals 0.
