Part I
Program Structure
and Execution
O
ur exploration of computer systems starts by studying the com-
puter itself, comprising a processor and a memory subsystem. At
the core, we require ways to represent basic data types, such as
approximations to integer and real arithmetic. From there, we can con-
sider how machine-level instructions manipulate data and how a com-
piler translates C programs into these instructions. Next, we study several
methods of implementing a processor to gain a better understanding of
how hardware resources are used to execute instructions. Once we under-
stand compilers and machine-level code, we can examine how to maxi-
mize program performance by writing C programs that, when compiled,
achieve the maximum possible performance. We conclude with the de-
sign of the memory subsystem, one of the most complex components of
a modern computer system.
This part of the book will give you a deep understanding of how
application programs are represented and executed. You will gain skills
that help you write programs that are secure, reliable, and make the best
use of the computing resources.
65
