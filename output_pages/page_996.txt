Section 11.6
Putting It Together: The Tiny Web Server
995
(lines 15–19), which then closes the connection and awaits the next connection
request. Otherwise, we read and (as we shall see) ignore any request headers
(line 20).
Next, we parse the URI into a ﬁlename and a possibly empty CGI argument
string, and we set a ﬂag that indicates whether the request is for static or dynamic
content (line 23). If the ﬁle does not exist on disk, we immediately send an error
message to the client and return.
Finally, if the request is for static content, we verify that the ﬁle is a regular
ﬁle and that we have read permission (line 31). If so, we serve the static content
(line 36) to the client. Similarly, if the request is for dynamic content, we verify
that the ﬁle is executable (line 39), and, if so, we go ahead and serve the dynamic
content (line 44).
The clienterror Function
Tiny lacks many of the error-handling features of a real server. However, it does
check for some obvious errors and reports them to the client. The clienterror
function in Figure 11.31 sends an HTTP response to the client with the appropriate
code/netp/tiny/tiny.c
1
void clienterror(int fd, char *cause, char *errnum,
2
char *shortmsg, char *longmsg)
3
{
4
char buf[MAXLINE], body[MAXBUF];
5
6
/* Build the HTTP response body */
7
sprintf(body, "<html><title>Tiny Error</title>");
8
sprintf(body, "%s<body bgcolor=""ffffff"">\r\n", body);
9
sprintf(body, "%s%s: %s\r\n", body, errnum, shortmsg);
10
sprintf(body, "%s<p>%s: %s\r\n", body, longmsg, cause);
11
sprintf(body, "%s<hr><em>The Tiny Web server</em>\r\n", body);
12
13
/* Print the HTTP response */
14
sprintf(buf, "HTTP/1.0 %s %s\r\n", errnum, shortmsg);
15
Rio_writen(fd, buf, strlen(buf));
16
sprintf(buf, "Content-type: text/html\r\n");
17
Rio_writen(fd, buf, strlen(buf));
18
sprintf(buf, "Content-length: %d\r\n\r\n", (int)strlen(body));
19
Rio_writen(fd, buf, strlen(buf));
20
Rio_writen(fd, body, strlen(body));
21
}
code/netp/tiny/tiny.c
Figure 11.31
Tiny clienterror sends an error message to the client.
