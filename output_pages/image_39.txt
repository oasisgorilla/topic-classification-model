25
CHAPTER  05    프로그램 디자인
가져왔으면 원래 형식으로 형변환해야 한다. 어떤 때는 변수 형식 종류가 수십이 
넘기도 한다. 나중에 데이터의 형식을 바꾸려면 모든 형변환도 바꿔야 한다. 운이 
없는 유지보수 프로그래머가 모든 형변환을 적절하게 처리하지 못한 경우(혹은 너
무 많은 변환을 한 경우) 컴파일러가 그 사실을 알려줄 수도 있지만, 그렇지 못한 
경우도 있다. 마찬가지로 변수 형식이 short에서 int로 변경하면 관련 형변환도 모
두 (short)에서 (int)로 바꿔야 한다. 일반 캐스트 연산자인 (cast)와 일반 변환 연
산자 (convert)라는 새로운 연산자에 대한 필요성이 논의되고 있다. 이들 연산자
는 변수 형식이 변경되어도 유지보수할 필요성이 없게 해주는 새로운 연산자가 될 
전망이다. 이런 이단적인 연산자가 언어 스펙에 포함되게 보고만 있어야 하는가? 
RFE 114691에서 형변환의 필요성을 제거하기 위한 genericity 부분에 적극 투표
하길 바란다. 
자바의 중복성 남용하기 
자바에서는 모든 형식을 두 번 지정해야 한다. 자바 프로그래머는 이러한 관습에 
익숙하기 때문에 두 형식을 아래처럼 살짝 바꾸어 놓아도 눈치챌 수 있는 사람은 
많지 않다. 
Bubblegum b = new Bubblegom(); 
불행히도 ++ 연산자의 대중성 때문에 다음과 같은 의사 중복 코드를 성공시키기가 
쉽지 않다. 
swimmer = swimner + 1; 
검증을 멀리하라 
입력 데이터에 대한 어떤 종류의 불일치 검사나 정확성 검사를 수행하지 않는다. 
즉, 우리는 회사 장비를 온전히 신뢰하고 있으며 모든 프로젝트 파트너와 시스템 
운영자를 신뢰하는 완벽한 팀원임을 보여줄 수 있다. 입력 데이터가 이상하거나 문
제가 있는 듯 보이더라도 항상 합리적인 값을 반환하기 위해 노력해야 한다. 
