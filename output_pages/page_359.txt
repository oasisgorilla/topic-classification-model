358
Chapter 3
Machine-Level Representation of Programs
3.70 ◆◆◆
Consider the following union declaration:
1
union ele {
2
struct {
3
long *p;
4
long y;
5
} e1;
6
struct {
7
long x;
8
union ele *next;
9
} e2;
10
};
This declaration illustrates that structures can be embedded within unions.
The following function (with some expressions omitted) operates on a linked
list having these unions as list elements:
1
void proc (union ele *up) {
2
up->
= *(
) -
;
3
}
A. What are the offsets (in bytes) of the following ﬁelds:
e1.p
e1.y
e2.x
e2.next
B. How many total bytes does the structure require?
C. The compiler generates the following assembly code for proc:
void proc (union ele *up)
up in %rdi
1
proc:
2
movq
8(%rdi), %rax
3
movq
(%rax), %rdx
4
movq
(%rdx), %rdx
5
subq
8(%rax), %rdx
6
movq
%rdx, (%rdi)
7
ret
On the basis of this information, ﬁll in the missing expressions in the code
for proc. Hint: Some union references can have ambiguous interpretations.
These ambiguities get resolved as you see where the references lead. There
